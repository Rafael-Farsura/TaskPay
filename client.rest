### Base URL da API
@url = http://localhost:3001

### Token de autentica칞칚o (ser치 preenchido automaticamente ap칩s a requisi칞칚o de login)
@authToken = {{authenticate.response.body.access_token}}


######################################################################
#                          AUTENTICA칂츾O                               #
######################################################################

### [POST] Login do usu치rio
# Autentica um usu치rio e retorna um token JWT.
# Substitua os campos "email" e "password" pelos dados do usu치rio.
# O token ser치 utilizado automaticamente nas pr칩ximas requisi칞칫es.
#
# 游댏 Requer: Nenhuma autoriza칞칚o
# 游닋 Body: email, password
# 游닌 Response: access_token, user data
###
# @name authenticate
POST {{url}}/auth/login
Content-Type: application/json

{
  "email": "<USER EMAIL HERE>",
  "password": "<USER PASSWORD HERE>"
}


######################################################################
#                           USU츼RIOS                                 #
######################################################################

### [GET] Listar todos os usu치rios
# Retorna a lista completa de usu치rios cadastrados.
#
# 游댏 Requer: Token de autentica칞칚o
# 游닌 Response: Array de usu치rios
###
GET {{url}}/users/find
Authorization: Bearer {{authToken}}
Accept: application/json


### [GET] Buscar usu치rio por ID
# Retorna os dados de um usu치rio espec칤fico, usando o ID.
#
# 游빌 Par칙metro: ID do usu치rio na URL
# 游댏 Requer: Token de autentica칞칚o
###
GET {{url}}/users/find/id/<USER_ID_HERE>
Authorization: Bearer {{authToken}}
Accept: application/json


### [GET] Buscar usu치rio por email
# Retorna os dados de um usu치rio espec칤fico, usando o e-mail.
#
# 游빌 Par칙metro: Email do usu치rio na URL
# 游댏 Requer: Token de autentica칞칚o
###
GET {{url}}/users/find/email/<USER_EMAIL_HERE>
Authorization: Bearer {{authToken}}
Accept: application/json


### [POST] Criar novo usu치rio
# Cria um novo usu치rio no sistema.
#
# 游댏 Requer: Token de autentica칞칚o
# 游닋 Body: email, password, name
# 游닌 Response: dados do usu치rio criado
###
POST {{url}}/users/create
Authorization: Bearer {{authToken}}
Content-Type: application/json
Accept: application/json

{
  "email": "<USER_EMAIL_HERE>",
  "password": "<USER_PASSWORD_HERE>",
  "name": "<USER_NAME_HERE>"
}


### [PATCH] Atualizar dados de um usu치rio
# Atualiza os dados de um usu치rio existente.
#
# 游빌 Par칙metro: ID do usu치rio na URL
# 游댏 Requer: Token de autentica칞칚o
# 游닋 Body: email, password, name (qualquer um pode ser alterado)
###
PATCH {{url}}/users/update/<USER_ID_HERE>
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "email": "<USER_EMAIL_HERE>",
  "password": "<USER_PASSWORD_HERE>",
  "name": "<USER_NAME_HERE>"
}


### [DELETE] Deletar um usu치rio
# Remove permanentemente um usu치rio do sistema.
#
# 游빌 Par칙metro: ID do usu치rio na URL
# 游댏 Requer: Token de autentica칞칚o
###
DELETE {{url}}/users/delete/<USER_ID_HERE>
Authorization: Bearer {{authToken}}
